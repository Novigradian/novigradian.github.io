---
import { siteConfig } from "../config";
const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
---

{
  hasProjects && (
    <section id="projects" class="p-8 sm:p-12 md:p-16 lg:p-24">
      <div>
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
              Projects
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
          </div>

          <div class="lg:col-span-8">
            <div class="space-y-8">
              {siteConfig.projects.map((project, index) => {
                const Component = project.link ? "a" : "div";
                const linkProps = project.link
                  ? {
                      href: project.link,
                      target: "_blank",
                      rel: "noopener noreferrer",
                    }
                  : {};

                return (
                  <div class="group relative">
                    <Component
                      {...linkProps}
                      class={`block relative p-4 sm:p-6 md:p-8 rounded-xl sm:rounded-2xl border transition-all duration-300 overflow-hidden ${
                        project.link
                          ? "hover:shadow-xl hover:-translate-y-1"
                          : ""
                      }`}
                      style={project.image ? `background-image: url('${project.image}'); background-size: cover; background-position: ${project.bgPosition ?? 'center 60%'}; border-color: rgba(255,255,255,0.04);` : 'background-color: var(--tw-bg-opacity, #f8fafc); border-color: #e5e7eb;'}
                    >
                      {/* overlay for readability: use project.overlay (0.0-1.0) or default 0.55 */}
                      {project.image && (
                        <div
                          class="absolute inset-0 pointer-events-none"
                          style={`background: rgba(0,0,0,${project.overlay ?? 0.55})`}
                        />
                      )}

                      {project.link && (
                        <div class="absolute top-4 right-4 sm:top-6 sm:right-6 md:top-8 md:right-8 w-10 h-10 sm:w-11 sm:h-11 md:w-12 md:h-12 flex items-center justify-center bg-gray-900 rounded-full text-white transition-all duration-300 group-hover:bg-gray-700">
                          <svg
                            class="w-4 h-4 sm:w-4.5 sm:h-4.5 md:w-5 md:h-5 transition-transform duration-300 group-hover:translate-x-0.5 group-hover:-translate-y-0.5"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M7 17L17 7M17 7H7M17 7V17"
                            />
                          </svg>
                        </div>
                      )}

                      <div class="relative z-10 space-y-4">
                        <div>
                          <span
                            class="text-sm font-mono"
                            style={{ color: siteConfig.accentColor }}
                          >
                            0{index + 1}
                          </span>
                          <h3 class={`text-xl sm:text-2xl font-bold mt-1`} style={project.image ? 'color: #ffffff' : 'color: #111827'}>
                            {project.name}
                          </h3>
                        </div>

                        <p
                          class={`text-base sm:text-lg leading-relaxed ${project.link ? "pr-12 sm:pr-14 md:pr-16" : ""}`}
                          style={project.image ? 'color: rgba(255,255,255,0.95)' : 'color: #4b5563'}
                        >
                          {project.description}
                        </p>

                        {project.skills && project.skills.length > 0 && (
                          <div class="flex flex-wrap gap-1.5 sm:gap-2 pt-2">
                            {project.skills.map((skill) => (
                              <span
                                class={`px-2.5 sm:px-3 py-1 sm:py-1.5 rounded-md sm:rounded-lg text-xs sm:text-sm font-medium transition-all duration-300 ${
                                  project.link ? "group-hover:bg-gray-800" : "bg-gray-900 text-white"
                                }`}
                                style={project.image ? 'background: rgba(0,0,0,0.45); color: #fff' : ''}
                              >
                                {skill}
                              </span>
                            ))}
                          </div>
                        )}
                      </div>
                    </Component>
                  </div>
                );
              })}
            </div>
          </div>
        </div>
      </div>
    </section>
  )
}
